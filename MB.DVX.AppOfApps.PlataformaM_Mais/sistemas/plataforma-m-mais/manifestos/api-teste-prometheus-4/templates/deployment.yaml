apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: {{ .Values.name }}
    argocd.argoproj.io/instance: {{ .Values.name }}
    backstage.io/kubernetes-id: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/instance: {{ .Values.name }}
        app.kubernetes.io/component: {{ .Values.name }}
        argocd.argoproj.io/instance: {{ .Values.name }}
        backstage.io/kubernetes-id: {{ .Values.name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: layer
                operator: In
                values:
                - apps
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          envFrom:
            - secretRef:
                name: {{ .Values.name }}-secrets
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.port }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}