apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: cloudsql-template
  title: CloudSQL Template
  description: Scaffold a new CloudSQL database
  tags:
    - postgresql
    - mysql
    - sqlserver
spec:
  owner: azure_plataformammais_sandbox
  type: resource
  # these are the steps which are rendered in the frontend with the form input
  # https://backstage.io/docs/features/software-templates/input-examples
  parameters:
    - title: Complete the form to create a new CloudSQL database
      #ui:ObjectFieldTemplate: TwoColumn
      required:
        - name
        - system
      properties:
        name:
          type: string
          title: Database Name
          description: The name of the project
          ui:autofocus: true
          maxLength: 50
          pattern: '^([-a-z0-9]+)*$'           
        system:
          title: System
          type: string
          description: The system the component belongs to
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System

    - title: Select an application for the database
      #ui:ObjectFieldTemplate: TwoColumn
      required:
        - component
      properties:
        component:
          title: Application
          type: string
          description: The resource the component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              kind: Component
              spec.type: service
              spec.system: ${{ parameters.system | parseEntityRef | pick('name') }}


  steps:
    - id: clone-azure-repo
      name: Clone AppOfApps Repo
      action: azure:repo:clone
      input:
        remoteUrl: "https://devops.mercantil.com.br/Tecnologia_MB/MB/_git/MB.DVX.AppOfApps.PlataformaM_Mais"
        branch: "main"
        targetPath: ./appofapps

    - id: fetch-app-of-apps-backstage
      name: Fetch Backstage Catalog Template 
      action: fetch:template
      input:
        url: ./appofapps/catalogo
        #copyWithoutTemplating:
        #  - kubernetes/helm/templates/*
        targetPath: ./appofapps/sistemas/${{ parameters.system | parseEntityRef | pick('name') }}/catalogos
        #replace: true
        values:
          name: ${{ parameters.name }}
          owner: azure_plataformammais_sandbox
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          repoUrl: ${{ parameters.repoUrl }}
          system: ${{ parameters.system | parseEntityRef | pick('name') }}

    - id: fetch-app-of-apps-manifesto
      name: Fetch Manifesto Template 
      action: fetch:template
      input:
        url: ./appofapps/manifesto
        #copyWithoutTemplating:
        #  - templates/*
        targetPath: ./appofapps/sistemas/${{ parameters.system | parseEntityRef | pick('name') }}/manifestos/${{ parameters.component | parseEntityRef | pick('name') }}/templates
        #replace: true
        values:
          name: ${{ parameters.name }}
          owner: azure_plataformammais_sandbox
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          repoUrl: ${{ parameters.repoUrl }}
          system: ${{ parameters.system | parseEntityRef | pick('name') }}
          component: ${{ parameters.component | parseEntityRef | pick('name') }}

    - id: push-azure-repo
      name: Push new Branch to Remote AppOfApps Repo
      action: azure:repo:push
      input:
        sourcePath: ./appofapps
        branch: ${{ parameters.name }}
        gitCommitMessage: Add ${{ parameters.name }} project files
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}

    - id: pull-request-azur-repo
      name: Create a Pull Request to AppOfApps Repo
      action: azure:repo:pr
      input:
        server: devops.mercantil.com.br
        organization: Tecnologia_MB
        project: MB
        sourcePath: ./appofapps
        sourceBranch: ${{ parameters.name }}
        targetBranch: "main"
        repoId: b7dd45ce-869b-456f-869e-eded0437c6d1
        title: Add ${{ parameters.name }} project files
        gitCommitMessage: Add ${{ parameters.name }} project files
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        supportsIterations: false
        autoComplete: true

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/${{ parameters.name }}-catalog-info.yaml"

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}